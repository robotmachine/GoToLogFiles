<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>247.1</string>
	<key>AMApplicationVersion</key>
	<string>2.1.1</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array/>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0</string>
				<key>AMParameterProperties</key>
				<dict>
					<key>affirmativeTitle</key>
					<dict/>
					<key>displayWarning</key>
					<dict/>
					<key>explanationText</key>
					<dict/>
					<key>negativeTitle</key>
					<dict/>
					<key>questionText</key>
					<dict>
						<key>tokenizedValue</key>
						<array>
							<string>This program is used to gather log files for Citrix Online products and system diagnostic information.</string>
						</array>
					</dict>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array/>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Ask for Confirmation.action</string>
				<key>ActionName</key>
				<string>Ask for Confirmation</string>
				<key>ActionParameters</key>
				<dict>
					<key>affirmativeTitle</key>
					<string>OK</string>
					<key>displayWarning</key>
					<false/>
					<key>explanationText</key>
					<string>The log files will be placed in a zip file on your desktop.  This process may take a few moments.</string>
					<key>negativeTitle</key>
					<string>Cancel</string>
					<key>questionText</key>
					<string>This program is used to gather log files for Citrix Online products and system diagnostic information.</string>
				</dict>
				<key>Application</key>
				<array>
					<string>Automator</string>
				</array>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.Ask for Confirmation</string>
				<key>CFBundleVersion</key>
				<string>1.0</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<true/>
				<key>CanShowWhenRun</key>
				<false/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>AMAppleScriptAction</string>
				<key>InputUUID</key>
				<string>CFECA808-0ABA-4548-905B-18C3CA7089D4</string>
				<key>Keywords</key>
				<array>
					<string>Message</string>
					<string>Ask</string>
					<string>Display</string>
					<string>Prompt</string>
					<string>Show</string>
				</array>
				<key>OutputUUID</key>
				<string>A15AC57F-C463-4C89-AFEF-96FAAA23199F</string>
				<key>UUID</key>
				<string>95C44C19-5BA3-4892-BA2D-CC06EBDBF574</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>questionText</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>displayWarning</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>explanationText</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string>OK</string>
						<key>name</key>
						<string>affirmativeTitle</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>Cancel</string>
						<key>name</key>
						<string>negativeTitle</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<false/>
				<key>location</key>
				<string>769.500000:1088.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Ask for Confirmation.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<false/>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0</string>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run {input, parameters}		set ProductName to choose from list {"GoToMyPC_Host", "GoToMyPC_Client", "GoToMeeting", "GoToMeeting_Recording_Logs", "GoToAssist_Corporate", "GoToAssist_Remote_Support"} with prompt "Please select the product you would like to gather logs for:" default items {"GoToMyPC_Host"}	return ProductNameend run</string>
				</dict>
				<key>Application</key>
				<array>
					<string>Automator</string>
				</array>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>D52D13A4-58CF-4321-9A45-14748327F718</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>5EC93DFD-D921-454A-9587-404E773E626E</string>
				<key>UUID</key>
				<string>99A4B428-3218-451A-BB71-598AFD1DF15C</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<false/>
				<key>location</key>
				<string>769.500000:1046.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<false/>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.1</string>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>if [ $@ = "GoToMyPC_Host" ]; then

# Create a temporary folder if it does not already exist.
	if [ ! -d "~/Desktop/GoToMyPC_Host_Logs" ]; then mkdir ~/Desktop/GoToMyPC_Host_Logs; fi;\
# Copy CrashReporter files to a temporary folder.
	rsync -a --exclude="MobileDevice" ~/Library/Logs/CrashReporter/* ~/Desktop/GoToMyPC_Host_Logs/CrashReporterUser/; \
	rsync -a /Library/Logs/DiagnosticReports/* ~/Desktop/GoToMyPC_Host_Logs/CrashReporterSystem/; \
# Copy the system log to the temporary folder.
	rsync -a /Private/Var/Log/system.log* ~/Desktop/GoToMyPC_Host_Logs/SystemLog; \
# Copy Endpoint Logs to the temporary folder.
	rsync -a /Library/Logs/com.citrixonline.GoToMyPC/* ~/Desktop/GoToMyPC_Host_Logs/Endpoint_Logs; \
# Get a list of running applications and installed applications.
	ps aux &gt; ~/Desktop/GoToMyPC_Host_Logs/Processes.txt; \
	system_profiler &gt; ~/Desktop/GoToMyPC_Host_Logs/System_Profiler.txt; \
# Create a Gzipped Tar of all of the folders on the desktop.
	tar -czf ~/Desktop/GoToMyPC_Host_Logs.tgz -C ~/Desktop/ GoToMyPC_Host_Logs ; \
# Remove temporary folder.
	rm -rf ~/Desktop/GoToMyPC_Host_Logs

elif [ $@ = "GoToMyPC_Client" ]; then

# Create a temporary folder if it does not already exist.
	if [ ! -d "~/Desktop/GoToMyPC_Client_Logs" ]; then mkdir ~/Desktop/GoToMyPC_Client_Logs; fi;\
# Copy CrashReporter files to a temporary folder.
	rsync -a --exclude="MobileDevice" ~/Library/Logs/CrashReporter/* ~/Desktop/GoToMyPC_Client_Logs/CrashReporterUser/; \
	rsync -a /Library/Logs/DiagnosticReports/* ~/Desktop/GoToMyPC_Client_Logs/CrashReporterSystem/; \
# Copy the system log to the temporary folder.
	rsync -a /Private/Var/Log/system.log* ~/Desktop/GoToMyPC_Client_Logs/SystemLog; \
# Copy Endpoint Logs to the temporary folder.
	rsync -a ~/Library/Logs/com.citrixonline.GoToMyPC/* ~/Desktop/GoToMyPC_Client_Logs/Endpoint_Logs; \
# Get a list of running applications and installed applications.
	ps aux &gt; ~/Desktop/GoToMyPC_Client_Logs/Processes.txt; \
	system_profiler &gt; ~/Desktop/GoToMyPC_Client_Logs/System_Profiler.txt; \
# Create a Gzipped Tar of all of the folders on the desktop.
	tar -czf ~/Desktop/GoToMyPC_Client_Logs.tgz -C ~/Desktop/ GoToMyPC_Client_Logs ; \
# Remove temporary folder.
	rm -rf ~/Desktop/GoToMyPC_Client_Logs

elif [ $@ = "GoToMeeting" ]; then

# Create a temporary folder if it does not already exist.
	if [ ! -d "~/Desktop/GoToMeeting_Logs" ]; then mkdir ~/Desktop/GoToMeeting_Logs; fi;\
# Copy CrashReporter files to a temporary folder.
	rsync -a --exclude="MobileDevice" ~/Library/Logs/CrashReporter/* ~/Desktop/GoToMeeting_Logs/CrashReporterUser/; \
	rsync -a /Library/Logs/DiagnosticReports/* ~/Desktop/GoToMeeting_Logs/CrashReporterSystem/; \
# Copy the system log to the temporary folder.
	rsync -a /Private/Var/Log/system.log* ~/Desktop/GoToMeeting_Logs/SystemLog; \
# Copy Endpoint and Recording Manager Logs to the temporary folder.
	rsync -a ~/Library/Logs/com.citrixonline.GoToMeeting/* ~/Desktop/GoToMeeting_Logs/Endpoint_Logs; \
	if [ -d ~/Library/Logs/com.citrixonline.GoToMeeting_Recording_Manager ]; then rsync -a ~/Library/Logs/com.citrixonline.GoToMeeting_Recording_Manager/* ~/Desktop/GoToMeeting_Logs/Recording_Manager; elif [ -d ~/Library/Logs/com.citrixonline.Mac.GoToMeeting.RecordingManager ]; then rsync -a ~/Library/Logs/com.citrixonline.Mac.GoToMeeting.RecordingManager/* ~/Desktop/GoToMeeting_Logs/Recording_Manager;  fi \
# Get a list of running applications and installed applications.
	ps aux &gt; ~/Desktop/GoToMeeting_Logs/Processes.txt; \
	system_profiler &gt; ~/Desktop/GoToMeeting_Logs/System_Profiler.txt; \
# Create a Gzipped Tar of all of the folders on the desktop.
	tar -czf ~/Desktop/GoToMeeting_Logs.tgz -C ~/Desktop/ GoToMeeting_Logs ; \
# Remove temporary folder.
	rm -rf ~/Desktop/GoToMeeting_Logs

elif [ $@ = "GoToMeeting_Recording_Logs" ]; then

# Create a temporary folder if it does not already exist.
	if [ ! -d "~/Desktop/GoToMeeting_Logs" ]; then mkdir ~/Desktop/GoToMeeting_Logs; fi;\
# Copy CrashReporter files to a temporary folder.
	rsync -a --exclude="MobileDevice" ~/Library/Logs/CrashReporter/* ~/Desktop/GoToMeeting_Logs/CrashReporterUser/; \
	rsync -a /Library/Logs/DiagnosticReports/* ~/Desktop/GoToMeeting_Logs/CrashReporterSystem/; \
# Copy the system log to the temporary folder.
	rsync -a /Private/Var/Log/system.log* ~/Desktop/GoToMeeting_Logs/SystemLog; \
# Copy Endpoint and Recording Manager Logs to the temporary folder.
	rsync -a ~/Library/Logs/com.citrixonline.GoToMeeting/* ~/Desktop/GoToMeeting_Logs/Endpoint_Logs; \
	if [ -d ~/Library/Logs/com.citrixonline.GoToMeeting_Recording_Manager ]; then rsync -a ~/Library/Logs/com.citrixonline.GoToMeeting_Recording_Manager/* ~/Desktop/GoToMeeting_Logs/Recording_Manager; elif [ -d ~/Library/Logs/com.citrixonline.Mac.GoToMeeting.RecordingManager ]; then rsync -a ~/Library/Logs/com.citrixonline.Mac.GoToMeeting.RecordingManager/* ~/Desktop/GoToMeeting_Logs/Recording_Manager;  fi \
# Copy unconverted video and audio files.
	if [ -f ~/Documents/Recordings/*.temp_audio ]; then rsync -a ~/Documents/Recordings/*.temp_{audio,video} ~/Desktop/GoToMeeting_Logs/Unconverted_Temp_Files; fi \
# Looks in the settings plist for any other directories for the temp files to be in and copies those, too.
THE_PATH=$(defaults -currentHost read com.citrixonline.GoToMeeting | grep RecordingPath | sed 's/    RecordingPath = //g' | sed 's/\;//g' | sed 's/\"//g') ; if [ -f "$THE_PATH"/*.temp_audio ]; then rsync -a $THE_PATH/*.temp_{audio,video} ~/Desktop/GoToMeeting_Logs/Unconverted_Temp_Files_Alternate; fi
# Get a list of running applications and installed applications.
	ps aux &gt; ~/Desktop/GoToMeeting_Logs/Processes.txt; \
	system_profiler &gt; ~/Desktop/GoToMeeting_Logs/System_Profiler.txt; \
# Create a Gzipped Tar of all of the folders on the desktop.
	tar -czf ~/Desktop/GoToMeeting_Logs.tgz -C ~/Desktop/ GoToMeeting_Logs ; \
# Remove temporary folder.
	rm -rf ~/Desktop/GoToMeeting_Logs

elif [ $@ = "GoToAssist_Corporate" ]; then

# Create a temporary folder if it does not already exist.
	if [ ! -d "~/Desktop/GoToAssist_Corporate_Logs" ]; then mkdir ~/Desktop/GoToAssist_Corporate_Logs; fi;\
# Copy CrashReporter files to a temporary folder.
	rsync -a --exclude="MobileDevice" ~/Library/Logs/CrashReporter/* ~/Desktop/GoToAssist_Corporate_Logs/CrashReporterUser/; \
	rsync -a /Library/Logs/DiagnosticReports/* ~/Desktop/GoToAssist_Corporate_Logs/CrashReporterSystem/; \
# Copy the system log to the temporary folder.
	rsync -a /Private/Var/Log/system.log* ~/Desktop/GoToAssist_Corporate_Logs/SystemLog; \
# Copy Endpoint Logs to the temporary folder.
	rsync -a ~/Library/Logs/com.citrixonline.g2ac*/* ~/Desktop/GoToAssist_Corporate_Logs/Endpoint_Logs; \
	rsync -a ~/Library/Logs/com.citrixonline.g2a.customer/* ~/Desktop/GoToAssist_Corporate_Logs/Endpoint_Logs_Customer; \
# Get a list of running applications and installed applications.
	ps aux &gt; ~/Desktop/GoToAssist_Corporate_Logs/Processes.txt; \
	system_profiler &gt; ~/Desktop/GoToAssist_Corporate_Logs/System_Profiler.txt; \
# Create a Gzipped Tar of all of the folders on the desktop.
	tar -czf ~/Desktop/GoToAssist_Corporate_Logs.tgz -C ~/Desktop/ GoToAssist_Corporate_Logs ; \
# Remove temporary folder.
	rm -rf ~/Desktop/GoToAssist_Corporate_Logs

elif [ $@ = "GoToAssist_Remote_Support" ]; then

# Create a temporary folder if it does not already exist.
	if [ ! -d "~/Desktop/GoToAssist_Remote_Support_Logs" ]; then mkdir ~/Desktop/GoToAssist_Remote_Support_Logs; fi;\
# Copy CrashReporter files to a temporary folder.
	rsync -a --exclude="MobileDevice" ~/Library/Logs/CrashReporter/* ~/Desktop/GoToAssist_Remote_Support_Logs/CrashReporterUser/; \
	rsync -a /Library/Logs/DiagnosticReports/* ~/Desktop/GoToAssist_Remote_Support_Logs/CrashReporterSystem/; \
# Copy the system log to the temporary folder.
	rsync -a /Private/Var/Log/system.log* ~/Desktop/GoToAssist_Remote_Support_Logs/SystemLog; \
# Copy Endpoint Logs to the temporary folder.
	if [ -d ~/Library/Logs/com.citrixonline.g2a.rs/customer ]; then rsync -a ~/Library/Logs/com.citrixonline.g2a.rs/customer ~/Desktop/GoToAssist_Remote_Support_Logs/Customer_Endpoint_Logs; fi
	if [ -d ~/Library/Logs/com.citrixonline.g2a.rs/Expert ]; then rsync -a ~/Library/Logs/com.citrixonline.g2a.rs/Expert ~/Desktop/GoToAssist_Remote_Support_Logs/Expert_Endpoint_Logs; fi
	if [ -d /Library/Logs/com.citrixonline.g2a.rs ]; then rsync -a /Library/Logs/com.citrixonline.g2a.rs ~/Desktop/GoToAssist_Remote_Support_Logs/Unattended_Endpoint_Logs; fi
	if [ -d ~/Library/Logs/com.citrixonline.g2ax ]; then rsync -a ~/Library/Logs/com.citrixonline.g2ax ~/Desktop/GoToAssist_Remote_Support_Logs/Pre_Build_403_Logs; fi
	if [ -d ~/Library/Logs/com.citrixonline.g2ax.customer ]; then rsync -a ~/Library/Logs/com.citrixonline.g2ax.customer ~/Desktop/GoToAssist_Remote_Support_Logs/Pre_Build_403_Logs; fi
	if [ -d ~/Library/Logs/com.citrixonline.g2ax.expert ]; then rsync -a ~/Library/Logs/com.citrixonline.g2ax.expert ~/Desktop/GoToAssist_Remote_Support_Logs/Pre_Build_403_Logs; fi
# Get a list of running applications and installed applications.
	ps aux &gt; ~/Desktop/GoToAssist_Remote_Support_Logs/Processes.txt; \
	system_profiler &gt; ~/Desktop/GoToAssist_Remote_Support_Logs/System_Profiler.txt; \
# Create a Gzipped Tar of all of the folders on the desktop.
	tar -czf ~/Desktop/GoToAssist_Remote_Support_Logs.tgz -C ~/Desktop/ GoToAssist_Remote_Support_Logs ; \
# Remove temporary folder.
	rm -rf ~/Desktop/GoToAssist_Remote_Support_Logs

else
	echo "Nope"
fi</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/bin/bash</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>Application</key>
				<array>
					<string>Automator</string>
				</array>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.1</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>Disabled</key>
				<false/>
				<key>InputUUID</key>
				<string>68579E92-121F-431D-BACD-0AAE4DA316CB</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>F1C64177-47D3-4EA0-9D60-8D2FC45BBE13</string>
				<key>UUID</key>
				<string>38C39278-8BEB-494B-9B95-927393FCC8C4</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>769.500000:1004.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict>
		<key>3D68D1C6-1BA2-4AA7-B052-24AF1F93F235</key>
		<dict>
			<key>from</key>
			<string>99A4B428-3218-451A-BB71-598AFD1DF15C - 99A4B428-3218-451A-BB71-598AFD1DF15C</string>
			<key>to</key>
			<string>38C39278-8BEB-494B-9B95-927393FCC8C4 - 38C39278-8BEB-494B-9B95-927393FCC8C4</string>
		</dict>
		<key>88B4AF44-197B-47BB-BA3F-7022B7ADA3A6</key>
		<dict>
			<key>from</key>
			<string>95C44C19-5BA3-4892-BA2D-CC06EBDBF574 - 95C44C19-5BA3-4892-BA2D-CC06EBDBF574</string>
			<key>to</key>
			<string>99A4B428-3218-451A-BB71-598AFD1DF15C - 99A4B428-3218-451A-BB71-598AFD1DF15C</string>
		</dict>
	</dict>
	<key>state</key>
	<dict>
		<key>AMLogTabViewSelectedIndex</key>
		<integer>0</integer>
		<key>libraryState</key>
		<dict>
			<key>actionsMajorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 381.000000, 1052.000000, NO</string>
					<string>0.000000, 1053.000000, 381.000000, -1.000000, NO</string>
				</array>
			</dict>
			<key>actionsMinorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 163.000000, 1052.000000, NO</string>
					<string>164.000000, 0.000000, 217.000000, 1052.000000, NO</string>
				</array>
			</dict>
			<key>variablesMajorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 350.000000, 555.000000, NO</string>
					<string>0.000000, 556.000000, 350.000000, 148.000000, NO</string>
				</array>
			</dict>
			<key>variablesMinorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 163.000000, 555.000000, NO</string>
					<string>164.000000, 0.000000, 186.000000, 555.000000, NO</string>
				</array>
			</dict>
		</dict>
		<key>majorSplitViewState</key>
		<dict>
			<key>expandedPosition</key>
			<real>328</real>
			<key>subviewState</key>
			<array>
				<string>0.000000, 0.000000, 381.000000, 1097.000000, NO</string>
				<string>382.000000, 0.000000, 1539.000000, 1097.000000, NO</string>
			</array>
		</dict>
		<key>minorSplitViewState</key>
		<dict>
			<key>expandedPosition</key>
			<real>150</real>
			<key>subviewState</key>
			<array>
				<string>0.000000, 0.000000, 1539.000000, 1078.000000, NO</string>
				<string>0.000000, 446.000000, 825.000000, 140.000000, YES</string>
			</array>
		</dict>
		<key>windowFrame</key>
		<string>{{1, 4}, {1920, 1174}}</string>
		<key>workflowViewScrollPosition</key>
		<string>{{0, 0}, {1539, 1078}}</string>
	</dict>
	<key>variables</key>
	<array>
		<dict>
			<key>UUID</key>
			<string>1D8ADB25-B2BA-455A-B010-98AAA64CB14B</string>
			<key>identifier</key>
			<string>com.apple.Automator.Variable.Storage</string>
			<key>name</key>
			<string>ProductName</string>
		</dict>
	</array>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.workflow</string>
	</dict>
</dict>
</plist>
